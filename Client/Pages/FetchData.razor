@page "/fetchdata"
@using man_power_planning.Shared
@inject HttpClient Http
@inject DepartemenService DepartemenService

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<Table table=@table label="Label" HandleClickPrevious="Previous" HandleClickNext="Next"
    HandlePageSizeChange="HandlePageSizeChange" mySieveModel="mySieveModel"
    totalCountData="DepartemenService.Departemens.totalCountData" />


@code {
    private SieveModel mySieveModel = new SieveModel
        {
            Page = 1,
            PageSize = 5,
        };
    private TableModelViewModel table = new TableModelViewModel();
    private List<Departemen> departemenItems = new List<Departemen>();


    private async Task Next()
    {
        mySieveModel.Page++; // Increment the page
        await LoadDepartemen(mySieveModel); // Call LoadDepartemen with the updated page
    }
    private async Task Previous()
    {
        mySieveModel.Page--; // Increment the page
        await LoadDepartemen(mySieveModel); // Call LoadDepartemen with the updated page
    }

    private async Task HandlePageSizeChange(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int selectedPageSize))
        {
            mySieveModel.PageSize = selectedPageSize;
            await LoadDepartemen(mySieveModel); // Reload data when pageSize changes
        } // Call LoadDepartemen with the updated page
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadDepartemen(mySieveModel);
    }

    private async Task LoadDepartemen(SieveModel sieveModel)
    {
        await DepartemenService.LoadDepartemen(sieveModel);

        departemenItems = DepartemenService.Departemens.Items;

        table.Data = new List<List<object>>();

        foreach (var item in departemenItems)
        {
            var rowData = new List<object>
{
item.Id.ToString(),
item.Name,
new MarkupString($"<div style='color:blue;'>{item.IsActive.ToString()}</div>"),
};

            table.Data.Add(rowData);
        }

        table.Headers = new List<string>
{
"Name",
"IsActive"
};
    }

}
