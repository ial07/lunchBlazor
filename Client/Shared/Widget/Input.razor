<div class="form-group">
    <label class="form-label @(errorText != ""? "text-danger":"") @(bold?"fw-bold":"")">@label</label>
    <input type="@type" class="form-control @(errorText != "" ? "is-invalid" : "")" @bind-value="@value"
        placeholder="@placeholder" disabled="@disabled" @oninput="HandleInputChange" />

    <div class="col-auto">
        <span class="form-text text-danger">
            @errorText
        </span>
    </div>
</div>

@code {
    [Parameter]
    public string type { get; set; } = "text";
    [Parameter]
    public string? label { get; set; }
    [Parameter]
    public string? name { get; set; }
    [Parameter]
    public string? value { get; set; }
    [Parameter]
    public string errorText { get; set; } = "";
    [Parameter]
    public string? placeholder { get; set; }
    [Parameter]
    public bool bold { get; set; } = false;
    [Parameter]
    public bool disabled { get; set; } = false;
    [Parameter]
    public EventCallback<SelectChangedEventArgs> OnInput { get; set; }

    private async Task HandleInputChange(ChangeEventArgs e)
    {
        string selectedValue = e.Value?.ToString() ?? string.Empty; // Get the selected value

        var args = new SelectChangedEventArgs
            {
                Name = name ?? string.Empty,
                Value = selectedValue
            };

        // Invoke the OnInput event with the SelectChangedEventArgs instance
        await OnInput.InvokeAsync(args);
    }
}