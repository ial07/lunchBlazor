@page "/fetchdata"
@using lunchBlazor.Shared
@inject HttpClient Http
@inject BannerService BannerService
@inject SieveModel SieveModel

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<Table table=@table label="Label" HandleClickPrevious="Previous" HandleClickNext="Next"
    HandlePageSizeChange="HandlePageSizeChange" mySieveModel="mySieveModel"
    totalCountData="BannerService.Banners.totalCountData" />


@code {
    private SieveModel mySieveModel = new SieveModel
        {
            Page = 1,
            PageSize = 5,
        };
    private TableModelViewModel table = new TableModelViewModel();
    private List<Banner> bannerItems = new List<Banner>();


    private async Task Next()
    {
        mySieveModel.Page++; // Increment the page
        await LoadBanner(mySieveModel); // Call LoadBanner with the updated page
    }
    private async Task Previous()
    {
        mySieveModel.Page--; // Increment the page
        await LoadBanner(mySieveModel); // Call LoadBanner with the updated page
    }

    private async Task HandlePageSizeChange(ChangeEventArgs e)
    {
        if (int.TryParse(e.Value.ToString(), out int selectedPageSize))
        {
            mySieveModel.PageSize = selectedPageSize;
            await LoadBanner(mySieveModel); // Reload data when pageSize changes
        } // Call LoadBanner with the updated page
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadBanner(mySieveModel);
    }

    private async Task LoadBanner(SieveModel sieveModel)
    {
        await BannerService.LoadBanner(sieveModel);

        bannerItems = BannerService.Banners.Items;

        table.Data = new List<List<object>>();

        foreach (var item in bannerItems)
        {
            var rowData = new List<object>
{
item.Id.ToString(),
item.Name,
new MarkupString($"<img src='{item.Image}' width='20px' height='20px' alt='Banner Image' />"),
new MarkupString($"<div style='color:blue;'>{item.IsActive.ToString()}</div>"),
};

            table.Data.Add(rowData);
        }

        table.Headers = new List<string>
{
"Name",
"Image",
"IsActive"
};
    }

}
